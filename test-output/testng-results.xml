<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-08-07T02:50:52Z" name="Default suite" finished-at="2020-08-07T02:50:56Z" duration-ms="3989">
    <groups>
    </groups>
    <test started-at="2020-08-07T02:50:52Z" name="Default test" finished-at="2020-08-07T02:50:56Z" duration-ms="3989">
      <class name="RestTest">
        <test-method signature="QueryParamter_Name()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:52Z" name="QueryParamter_Name" finished-at="2020-08-07T02:50:53Z" duration-ms="1506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QueryParamter_Name -->
        <test-method signature="getRequestFindCapital_code()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:53Z" name="getRequestFindCapital_code" finished-at="2020-08-07T02:50:54Z" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestFindCapital_code -->
        <test-method signature="getRequestFindCapital_name()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:54Z" name="getRequestFindCapital_name" finished-at="2020-08-07T02:50:54Z" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestFindCapital_name -->
        <test-method signature="getRequestFindName_code()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:54Z" name="getRequestFindName_code" finished-at="2020-08-07T02:50:54Z" duration-ms="243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestFindName_code -->
        <test-method signature="getRequest_code_invalidNumber()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:54Z" name="getRequest_code_invalidNumber" finished-at="2020-08-07T02:50:54Z" duration-ms="222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequest_code_invalidNumber -->
        <test-method signature="getRequest_invalidinput()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:54Z" name="getRequest_invalidinput" finished-at="2020-08-07T02:50:55Z" duration-ms="282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequest_invalidinput -->
        <test-method signature="getRequestvalidateinput_name_char()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:55Z" name="getRequestvalidateinput_name_char" finished-at="2020-08-07T02:50:55Z" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestvalidateinput_name_char -->
        <test-method signature="getRequestvalidateinput_name_number()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:55Z" name="getRequestvalidateinput_name_number" finished-at="2020-08-07T02:50:55Z" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestvalidateinput_name_number -->
        <test-method signature="getResponseTime()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:55Z" name="getResponseTime" finished-at="2020-08-07T02:50:55Z" duration-ms="299" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected response time was not a value less than <0L> milliseconds, was 122 milliseconds (122 milliseconds).]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected response time was not a value less than <0L> milliseconds, was 122 milliseconds (122 milliseconds).
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:488)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:643)
at jdk.internal.reflect.GeneratedMethodAccessor46.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
at io.restassured.internal.ResponseSpecificationImpl.time(ResponseSpecificationImpl.groovy:114)
at io.restassured.internal.ValidatableResponseOptionsImpl.time(ValidatableResponseOptionsImpl.java:432)
at io.restassured.internal.ValidatableResponseOptionsImpl.time(ValidatableResponseOptionsImpl.java:428)
at RestTest.getResponseTime(RestTest.java:152)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResponseTime -->
        <test-method signature="getbadRequest_code()[pri:0, instance:RestTest@4c309d4d]" started-at="2020-08-07T02:50:55Z" name="getbadRequest_code" finished-at="2020-08-07T02:50:56Z" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getbadRequest_code -->
      </class> <!-- RestTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
